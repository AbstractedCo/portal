/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as StakingImport } from './routes/staking'
import { Route as DocsImport } from './routes/docs'
import { Route as IndexImport } from './routes/index'
import { Route as DaosIndexImport } from './routes/daos/index'
import { Route as DaosLayoutImport } from './routes/daos/_layout'
import { Route as DaosLayoutTransactionsImport } from './routes/daos/_layout/transactions'
import { Route as DaosLayoutSettingsImport } from './routes/daos/_layout/settings'
import { Route as DaosLayoutMembersImport } from './routes/daos/_layout/members'
import { Route as DaosLayoutAssetsImport } from './routes/daos/_layout/assets'

// Create Virtual Routes

const DaosImport = createFileRoute('/daos')()

// Create/Update Routes

const DaosRoute = DaosImport.update({
  id: '/daos',
  path: '/daos',
  getParentRoute: () => rootRoute,
} as any)

const StakingRoute = StakingImport.update({
  id: '/staking',
  path: '/staking',
  getParentRoute: () => rootRoute,
} as any)

const DocsRoute = DocsImport.update({
  id: '/docs',
  path: '/docs',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DaosIndexRoute = DaosIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DaosRoute,
} as any)

const DaosLayoutRoute = DaosLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => DaosRoute,
} as any)

const DaosLayoutTransactionsRoute = DaosLayoutTransactionsImport.update({
  id: '/transactions',
  path: '/transactions',
  getParentRoute: () => DaosLayoutRoute,
} as any)

const DaosLayoutSettingsRoute = DaosLayoutSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => DaosLayoutRoute,
} as any)

const DaosLayoutMembersRoute = DaosLayoutMembersImport.update({
  id: '/members',
  path: '/members',
  getParentRoute: () => DaosLayoutRoute,
} as any)

const DaosLayoutAssetsRoute = DaosLayoutAssetsImport.update({
  id: '/assets',
  path: '/assets',
  getParentRoute: () => DaosLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/docs': {
      id: '/docs'
      path: '/docs'
      fullPath: '/docs'
      preLoaderRoute: typeof DocsImport
      parentRoute: typeof rootRoute
    }
    '/staking': {
      id: '/staking'
      path: '/staking'
      fullPath: '/staking'
      preLoaderRoute: typeof StakingImport
      parentRoute: typeof rootRoute
    }
    '/daos': {
      id: '/daos'
      path: '/daos'
      fullPath: '/daos'
      preLoaderRoute: typeof DaosImport
      parentRoute: typeof rootRoute
    }
    '/daos/_layout': {
      id: '/daos/_layout'
      path: '/daos'
      fullPath: '/daos'
      preLoaderRoute: typeof DaosLayoutImport
      parentRoute: typeof DaosRoute
    }
    '/daos/': {
      id: '/daos/'
      path: '/'
      fullPath: '/daos/'
      preLoaderRoute: typeof DaosIndexImport
      parentRoute: typeof DaosImport
    }
    '/daos/_layout/assets': {
      id: '/daos/_layout/assets'
      path: '/assets'
      fullPath: '/daos/assets'
      preLoaderRoute: typeof DaosLayoutAssetsImport
      parentRoute: typeof DaosLayoutImport
    }
    '/daos/_layout/members': {
      id: '/daos/_layout/members'
      path: '/members'
      fullPath: '/daos/members'
      preLoaderRoute: typeof DaosLayoutMembersImport
      parentRoute: typeof DaosLayoutImport
    }
    '/daos/_layout/settings': {
      id: '/daos/_layout/settings'
      path: '/settings'
      fullPath: '/daos/settings'
      preLoaderRoute: typeof DaosLayoutSettingsImport
      parentRoute: typeof DaosLayoutImport
    }
    '/daos/_layout/transactions': {
      id: '/daos/_layout/transactions'
      path: '/transactions'
      fullPath: '/daos/transactions'
      preLoaderRoute: typeof DaosLayoutTransactionsImport
      parentRoute: typeof DaosLayoutImport
    }
  }
}

// Create and export the route tree

interface DaosLayoutRouteChildren {
  DaosLayoutAssetsRoute: typeof DaosLayoutAssetsRoute
  DaosLayoutMembersRoute: typeof DaosLayoutMembersRoute
  DaosLayoutSettingsRoute: typeof DaosLayoutSettingsRoute
  DaosLayoutTransactionsRoute: typeof DaosLayoutTransactionsRoute
}

const DaosLayoutRouteChildren: DaosLayoutRouteChildren = {
  DaosLayoutAssetsRoute: DaosLayoutAssetsRoute,
  DaosLayoutMembersRoute: DaosLayoutMembersRoute,
  DaosLayoutSettingsRoute: DaosLayoutSettingsRoute,
  DaosLayoutTransactionsRoute: DaosLayoutTransactionsRoute,
}

const DaosLayoutRouteWithChildren = DaosLayoutRoute._addFileChildren(
  DaosLayoutRouteChildren,
)

interface DaosRouteChildren {
  DaosLayoutRoute: typeof DaosLayoutRouteWithChildren
  DaosIndexRoute: typeof DaosIndexRoute
}

const DaosRouteChildren: DaosRouteChildren = {
  DaosLayoutRoute: DaosLayoutRouteWithChildren,
  DaosIndexRoute: DaosIndexRoute,
}

const DaosRouteWithChildren = DaosRoute._addFileChildren(DaosRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/docs': typeof DocsRoute
  '/staking': typeof StakingRoute
  '/daos': typeof DaosLayoutRouteWithChildren
  '/daos/': typeof DaosIndexRoute
  '/daos/assets': typeof DaosLayoutAssetsRoute
  '/daos/members': typeof DaosLayoutMembersRoute
  '/daos/settings': typeof DaosLayoutSettingsRoute
  '/daos/transactions': typeof DaosLayoutTransactionsRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/docs': typeof DocsRoute
  '/staking': typeof StakingRoute
  '/daos': typeof DaosIndexRoute
  '/daos/assets': typeof DaosLayoutAssetsRoute
  '/daos/members': typeof DaosLayoutMembersRoute
  '/daos/settings': typeof DaosLayoutSettingsRoute
  '/daos/transactions': typeof DaosLayoutTransactionsRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/docs': typeof DocsRoute
  '/staking': typeof StakingRoute
  '/daos': typeof DaosRouteWithChildren
  '/daos/_layout': typeof DaosLayoutRouteWithChildren
  '/daos/': typeof DaosIndexRoute
  '/daos/_layout/assets': typeof DaosLayoutAssetsRoute
  '/daos/_layout/members': typeof DaosLayoutMembersRoute
  '/daos/_layout/settings': typeof DaosLayoutSettingsRoute
  '/daos/_layout/transactions': typeof DaosLayoutTransactionsRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/docs'
    | '/staking'
    | '/daos'
    | '/daos/'
    | '/daos/assets'
    | '/daos/members'
    | '/daos/settings'
    | '/daos/transactions'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/docs'
    | '/staking'
    | '/daos'
    | '/daos/assets'
    | '/daos/members'
    | '/daos/settings'
    | '/daos/transactions'
  id:
    | '__root__'
    | '/'
    | '/docs'
    | '/staking'
    | '/daos'
    | '/daos/_layout'
    | '/daos/'
    | '/daos/_layout/assets'
    | '/daos/_layout/members'
    | '/daos/_layout/settings'
    | '/daos/_layout/transactions'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DocsRoute: typeof DocsRoute
  StakingRoute: typeof StakingRoute
  DaosRoute: typeof DaosRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DocsRoute: DocsRoute,
  StakingRoute: StakingRoute,
  DaosRoute: DaosRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/docs",
        "/staking",
        "/daos"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/docs": {
      "filePath": "docs.tsx"
    },
    "/staking": {
      "filePath": "staking.tsx"
    },
    "/daos": {
      "filePath": "daos",
      "children": [
        "/daos/_layout",
        "/daos/"
      ]
    },
    "/daos/_layout": {
      "filePath": "daos/_layout.tsx",
      "parent": "/daos",
      "children": [
        "/daos/_layout/assets",
        "/daos/_layout/members",
        "/daos/_layout/settings",
        "/daos/_layout/transactions"
      ]
    },
    "/daos/": {
      "filePath": "daos/index.tsx",
      "parent": "/daos"
    },
    "/daos/_layout/assets": {
      "filePath": "daos/_layout/assets.tsx",
      "parent": "/daos/_layout"
    },
    "/daos/_layout/members": {
      "filePath": "daos/_layout/members.tsx",
      "parent": "/daos/_layout"
    },
    "/daos/_layout/settings": {
      "filePath": "daos/_layout/settings.tsx",
      "parent": "/daos/_layout"
    },
    "/daos/_layout/transactions": {
      "filePath": "daos/_layout/transactions.tsx",
      "parent": "/daos/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
